% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findReversible.R
\name{findReversible}
\alias{findReversible}
\title{Find reversible mutation matrix}
\usage{
findReversible(mutmat, method = "MH", afreq = NULL, check = TRUE)
}
\arguments{
\item{mutmat}{A mutation matrix.}

\item{method}{Character.}

\item{afreq}{A vector with allele frequencies 
of the same length as the size of mutmat.}

\item{check}{Logical.}
}
\value{
Balanced mutation matrix. The expected mutation rate
of the balanced matrix is returned as `rate`.
}
\description{
The Metropolis - Hastings algorithm is used to convert 
a mutation matrix to a reversible one, i.e., find the
balanced matrix matrix.
}
\details{
Two different approaches are implemented.
The default, \code{method = "MH"}, gives a balanced matrix with off diagonal elements

\code{q_{ij} min(1, p_j/p_i * q_{ji}/q_{ij})}

where \code{q_{ij}} and \code{p_i} are the elements of the original mutation
matrix and the allele frequencies, respectively. 
The alternative, \code{method = "AV"}, gives a balanced matrix with off diagonal elements

\code{(p_i q_{ij} + p_j q_{ji} ) / (2p_i)}

if \code{q_{ji} < p_i, i neq j} (and may otherwise fail to balance).
}
\examples{
library(pedmut)
n = 4
p = 1:n/sum(1:n)
names(p) = 1:n
mutmat = mutationMatrix("onestep", rate = 0.02, afreq = p, alleles = 1:n)
findReversible(mutmat)
findReversible(mutmat, method = "AV")

Q = matrix(ncol = 2, c(0.9,0.9, 0.1, 0.1))
Q = matrix(ncol = 2, c(0.99, 0.01, 0.01, 0.99))
p = c(0.01, 0.99)
mutmat = mutationMatrix("custom", matrix = Q, alleles = 1:2)
findReversible(mutmat, afreq = p)
# AVerage balancing not possible:
findReversible(mutmat, method = "AV", afreq = p)
}
\author{
Thore Egeland
}
